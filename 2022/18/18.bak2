with open("input", "r") as fp:
    lines = [line.strip() for line in fp]

cubes = []
maxx = 0
maxy = 0
maxz = 0
minx = 20
miny = 20
minz = 20
for line in lines:
    x, y, z = [int(c) for c in line.split(',')]
    if x > maxx:
        maxx = x
    if x < minx:
        minx = x
    if y > maxy:
        maxy = y
    if y < miny:
        miny = y
    if z > maxz:
        maxz = z
    if z < minz:
        minz = z
    cubes.append((x, y, z))

print(minx, maxx)
print(miny, maxy)
print(minz, maxz)

exposed_sides = 0
for c in cubes:
    x, y, z = c
    # check x
    if (x-1, y, z) not in cubes:
        exposed_sides += 1
    if (x+1, y, z) not in cubes:
        exposed_sides += 1
    # check y
    if (x, y-1, z) not in cubes:
        exposed_sides += 1
    if (x, y+1, z) not in cubes:
        exposed_sides += 1
    # check z
    if (x, y, z-1) not in cubes:
        exposed_sides += 1
    if (x, y, z+1) not in cubes:
        exposed_sides += 1

print(exposed_sides)

open_air = []
closed_air = []
pen = 0
exposed_sides = 0
found = []
for pen in range(int(max(maxx, maxy, maxz)/2)+2):
    for i in range(minx+pen, maxx+1-pen):
        for j in range(miny+pen, maxy+1-pen):
            for k in range(minz+pen, maxz+1-pen):
                if i == minx+pen or i == maxx-pen or j == miny+pen or j == maxy-pen or k == minz+pen  or k == maxz-pen:
                    # check outer air cubes
                    if pen == 0:
                        # for the outer layer, if we don't have a cube we are air
                        if (i, j, k) not in cubes:
                            open_air.append((i, j, k))
                        # for the outer layer, if we find a cube we know it is touching air
                        else:
                            if i == minx:
                                open_air.append((i-1, j, k))
                                exposed_sides += 1
                            if j == miny:
                                open_air.append((i, j-1, k))
                                exposed_sides += 1
                            if k == minz:
                                open_air.append((i, j, k-1))
                                exposed_sides += 1
                            if i == maxx:
                                open_air.append((i+1, j, k))
                                exposed_sides += 1
                            if j == maxy:
                                open_air.append((i, j+1, k))
                                exposed_sides += 1
                            if k == maxz:
                                open_air.append((i, j, k+1))
                                exposed_sides += 1

                    # check inner air cubes
                    else:
                        # if the coordinate is not in cubes, it is air
                        if (i, j, k) not in cubes:
                            # if it is touching open air, it is also open air
                            if (i-1, j, k) in open_air or (i+1, j, k) in open_air or (i, j-1, k) in open_air or (i, j+1, k) in open_air or (i, j, k-1) in open_air or (i, j, k+1) in open_air:
                                open_air.append((i, j, k))
                            else:
                                closed_air.append((i, j, k))
                        else:
                            if (i-1, j, k) in open_air:
                                exposed_sides += 1
                            if (i+1, j, k) in open_air:
                                exposed_sides += 1
                            if (i, j-1, k) in open_air:
                                exposed_sides += 1
                            if (i, j+1, k) in open_air:
                                exposed_sides += 1
                            if (i, j, k-1) in open_air:
                                exposed_sides += 1
                            if (i, j, k+1) in open_air:
                                exposed_sides += 1
print(f"Exposed sides: {exposed_sides}")

# 2536 too low